{
  "properties": {
    "clangd.arguments": {
      "items": {
        "type": "string"
      },
      "description": "Arguments for clangd server.",
      "type": "array",
      "default": []
    },
    "clangd.enable": {
      "description": "Enable clangd language server features",
      "type": "boolean",
      "default": true
    },
    "clangd.serverCompletionRanking": {
      "description": "Always rank completion items on the server as you type. This produces more accurate results at the cost of higher latency than client-side filtering.",
      "type": "boolean",
      "default": true
    },
    "clangd.enableHover": {
      "description": "Enable hovers provided by the language server",
      "type": "boolean",
      "default": true
    },
    "clangd.restartAfterCrash": {
      "description": "Auto restart clangd (up to 4 times) if it crashes.",
      "type": "boolean",
      "default": true
    },
    "clangd.enableCodeCompletion": {
      "description": "Enable code completion provided by the language server",
      "type": "boolean",
      "default": true
    },
    "clangd.checkUpdates": {
      "description": "Check for language server updates on startup.",
      "type": "boolean",
      "default": false
    },
    "clangd.inactiveRegions.opacity": {
      "description": "Opacity of inactive regions (used only if clangd.inactiveRegions.useBackgroundHighlight=false)",
      "type": "number",
      "default": 0.55
    },
    "clangd.onConfigChanged": {
      "default": "prompt",
      "enumDescriptions": [
        "Prompt the user for restarting the server",
        "Automatically restart the server",
        "Do nothing"
      ],
      "type": "string",
      "description": "What to do when clangd configuration files are changed. Ignored for clangd 12+, which can reload such files itself.",
      "enum": [
        "prompt",
        "restart",
        "ignore"
      ]
    },
    "clangd.inactiveRegions.useBackgroundHighlight": {
      "description": "Use a background highlight rather than opacity to identify inactive preprocessor regions.",
      "type": "boolean",
      "default": false
    },
    "clangd.trace": {
      "type": "string",
      "description": "Names a file that clangd should log a performance trace to, in chrome trace-viewer JSON format."
    },
    "clangd.detectExtensionConflicts": {
      "description": "Warn about conflicting extensions and suggest disabling them.",
      "type": "boolean",
      "default": true
    },
    "clangd.semanticHighlighting": {
      "deprecationMessage": "Legacy semanticHighlights is no longer supported. Please use `editor.semanticHighlighting.enabled` instead.",
      "description": "Enable semantic highlighting in clangd.",
      "type": "boolean",
      "default": true
    },
    "clangd.fallbackFlags": {
      "items": {
        "type": "string"
      },
      "description": "Extra clang flags used to parse files when no compilation database is found.",
      "type": "array",
      "default": ["-w"]
    },
    "clangd.path": {
      "description": "The path to clangd executable, e.g.: \/usr\/bin\/clangd.",
      "scope": "machine-overridable",
      "type": "string",
      "default": "clangd"
    },
    "clangd.useScriptAsExecutable": {
      "description": "Allows the path to be a script e.g.: clangd.sh.",
      "scope": "machine-overridable",
      "type": "boolean",
      "default": false
    }
  },
  "type": "object",
  "title": "clangd"
}
